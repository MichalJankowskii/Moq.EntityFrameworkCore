trigger:
 branches:
   include:
     - master
 paths:
   include:
     - src/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  efVersion: '8.0.0'
  versionBuildNumber: $[counter('8.0.0', 1)]
  packageVersion: $(efVersion).$(versionBuildNumber)

steps:
- bash: echo $(packageVersion)
  displayName: Print version
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 8.0.100
    installationPath: $(Agent.ToolsDirectory)/dotnet
- task: DotNetCoreCLI@2
  displayName: 'Building'
  inputs:
    command: 'build'
    projects: 'src/Moq.EntityFrameworkCore.sln'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'Testing'
  inputs:
    command: 'test'
    projects: 'src/Moq.EntityFrameworkCore.sln'
    arguments: '--configuration $(buildConfiguration)'
    publishTestResults: false
    testRunTitle: 'Testing'
- task: DotNetCoreCLI@2
  displayName: "Packing"
  inputs:
    command: 'pack'
    packagesToPack: 'src/Moq.EntityFrameworkCore/Moq.EntityFrameworkCore.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: packageVersion
- task: PublishBuildArtifacts@1
  displayName: 'Publishing'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'package'
    publishLocation: 'Container'
